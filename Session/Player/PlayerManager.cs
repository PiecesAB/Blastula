using Godot;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace Blastula
{
    /// <summary>
    /// Singleton which organizes and allows selection of the players by name. Works with items of the PlayerEntry class.
    /// </summary>
    public partial class PlayerManager : Node
    {
        private Dictionary<string, PlayerEntry> playerEntriesByPath = new Dictionary<string, PlayerEntry>();

        public static PlayerManager main;

        /// <summary>
        /// Spawns the player at the path generated by the node hierarchy of PlayerEntry items.
        /// For example, a PlayerEntry item which is a direct child of this node is referred to simply by its name.
        /// PlayerEntry child "B" of child "Person" of this node would be referred to as "Person/B".
        /// </summary>
        public async Task SpawnPlayer(string path)
        {
            if (!playerEntriesByPath.ContainsKey(path)) { return; }
            PlayerEntry entry = playerEntriesByPath[path];
            await entry.SpawnPlayer();
        }

        public override void _Ready()
        {
            base._Ready();
            main = this;
            UtilityFunctions.PathBuilder(
                this,
                (c, path) => {
                    if (c is PlayerEntry)
                    {
                        playerEntriesByPath[path] = (PlayerEntry)c;
                    }
                },
                true
            );
        }
    }
}
